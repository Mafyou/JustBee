@page
@model CreerAlveoleModel
@{
    ViewData["Title"] = "Créer une Alvéole";
}

<!-- Hero Section -->
<div class="hero-section">
    <div class="container hero-content">
        <div class="text-center">
            <img src="/img/alveole.png" alt="Create Alveole" class="bee-icon">
            <h1 class="display-4 fw-bold mb-3">🏠 Créer une Alvéole</h1>
            <p class="lead mb-4">
                Rejoignez la ruche démocratique en créant votre alvéole citoyenne dans votre ville.
            </p>
            
            <!-- Add Rubrix Cube in hero -->
            <div class="mb-3">
                <img src="/img/rubrixcube.png" alt="Rubrix Cube" style="width: 50px; height: 50px; opacity: 0.8;">
            </div>
            
            <div class="d-flex justify-content-center gap-3">
                <a href="/MapBee" class="btn btn-outline-light">
                    <i class="fas fa-map"></i> Voir la Carte
                </a>
                <a href="#creation-form" class="btn btn-bee btn-lg">Créer mon Alvéole</a>
            </div>
        </div>
    </div>
</div>

<div class="container my-5" id="creation-form">
    <!-- Messages de feedback -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <div class="d-flex align-items-center">
                <img src="/img/alveole.png" alt="Success Bee" style="width: 25px; height: 19px; margin-right: 10px;">
                <div>
                    <i class="fas fa-check-circle"></i> @TempData["Success"]
                </div>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <div class="d-flex align-items-center">
                <img src="/img/alveole.png" alt="Warning Hive" style="width: 25px; height: 25px; margin-right: 10px;">
                <div>
                    <i class="fas fa-exclamation-circle"></i> @TempData["Error"]
                </div>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Warning"] != null)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <div class="d-flex align-items-center">
                <img src="/img/alveole.png" alt="Warning" style="width: 25px; height: 25px; margin-right: 10px;">
                <div>
                    <i class="fas fa-exclamation-triangle"></i> @TempData["Warning"]
                </div>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        <!-- Formulaire de création -->
        <div class="col-lg-8">
            <div class="section-card">
                <div class="d-flex align-items-center mb-4">
                    <img src="/img/alveole.png" alt="Create Alveole" style="width: 35px; height: 35px; margin-right: 10px;">
                    <h3 class="h4 mb-0">🏠 Créer votre Alvéole Citoyenne</h3>
                    <img src="/img/rubrixcube.png" alt="Rubrix Cube" style="width: 30px; height: 30px; margin-left: 15px; opacity: 0.7;">
                </div>

                <form method="post" class="needs-validation" novalidate>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="NomAlveole" class="form-label">
                                <i class="fas fa-home"></i> Nom de l'Alvéole *
                            </label>
                            <input asp-for="NomAlveole" class="form-control" placeholder="Ex: Alvéole Écologique Marseille" required>
                            <div class="invalid-feedback">
                                Veuillez donner un nom à votre alvéole.
                            </div>
                            <small class="text-muted">🏠 Nom unique pour identifier votre alvéole</small>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label asp-for="Email" class="form-label">
                                <i class="fas fa-envelope"></i> Email de Contact *
                            </label>
                            <input asp-for="Email" type="email" class="form-control" placeholder="votre@email.com" required>
                            <div class="invalid-feedback">
                                Veuillez saisir un email valide.
                            </div>
                            <small class="text-muted">📧 Un email de vérification sera envoyé</small>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12 mb-3">
                            <label asp-for="VilleCode" class="form-label">
                                <i class="fas fa-map-marker-alt"></i> Ville *
                            </label>
                            <div class="ville-selector">
                                <!-- Mode recherche (par défaut) -->
                                <div class="search-mode">
                                    <div class="position-relative">
                                        <input type="text" id="ville-search" class="form-control" placeholder="Rechercher votre ville..." autocomplete="off">
                                        <input asp-for="VilleCode" type="hidden" required>
                                        <div id="ville-results" class="search-results"></div>
                                    </div>
                                    <div class="mt-2">
                                        <button type="button" id="toggle-mode" class="btn btn-outline-secondary btn-sm">
                                            <i class="fas fa-list"></i> Afficher la liste complète
                                        </button>
                                        <button type="button" id="load-popular" class="btn btn-outline-info btn-sm">
                                            <i class="fas fa-star"></i> Villes populaires
                                        </button>
                                    </div>
                                </div>

                                <!-- Mode liste déroulante -->
                                <div class="list-mode" style="display: none;">
                                    <div class="mb-2">
                                        <small class="text-muted" id="ville-count-info">Villes disponibles</small>
                                    </div>
                                    <select id="ville-select" class="form-select" size="8">
                                        <option value="">Chargement des villes...</option>
                                    </select>
                                    <div class="mt-2">
                                        <button type="button" id="toggle-search" class="btn btn-outline-secondary btn-sm">
                                            <i class="fas fa-search"></i> Mode recherche
                                        </button>
                                        <input type="text" id="filter-list" class="form-control form-control-sm mt-2" placeholder="Filtrer les villes...">
                                    </div>
                                </div>
                            </div>
                            <div class="invalid-feedback">
                                Veuillez sélectionner votre ville.
                            </div>
                            <small class="text-muted">🔍 Utilisez la recherche ou parcourez la liste complète</small>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Description" class="form-label">
                            <i class="fas fa-align-left"></i> Description (optionnelle)
                        </label>
                        <textarea asp-for="Description" class="form-control" rows="3" 
                                  placeholder="Décrivez vos objectifs, vos actions ou votre vision pour cette alvéole..."></textarea>
                        <small class="text-muted">📝 Présentez votre alvéole aux autres abeilles citoyennes</small>
                    </div>

                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-bee btn-lg me-3">
                            <i class="fas fa-plus"></i> Créer mon Alvéole
                        </button>
                        <a href="/MapBee" class="btn btn-outline-warning">
                            <i class="fas fa-arrow-left"></i> Retour à la Carte
                        </a>
                    </div>
                </form>
            </div>
        </div>

        <!-- Informations sur les alvéoles -->
        <div class="col-lg-4">
            <div class="section-card">
                <div class="d-flex align-items-center mb-3">
                    <img src="/img/alveole.png" alt="Alveole Info" style="width: 35px; height: 35px; margin-right: 10px;">
                    <h5 class="mb-0">🍯 Qu'est-ce qu'une Alvéole ?</h5>
                </div>
                
                <div class="alveole-info">
                    <p class="text-muted mb-3">
                        Une alvéole citoyenne est un espace de démocratie participative où les habitants 
                        d'une ville peuvent se rassembler, débattre et proposer des solutions pour leur territoire.
                    </p>
                    
                    <div class="timeline-item">
                        <div class="d-flex align-items-start">
                            <img src="/img/alveole.png" alt="Organisation" style="width: 20px; height: 15px; margin-right: 8px; margin-top: 3px;">
                            <div>
                                <strong>Organisation citoyenne</strong><br>
                                <small class="text-muted">Espace d'échanges et de propositions pour tous les habitants</small>
                            </div>
                        </div>
                    </div>
                    
                    <div class="timeline-item">
                        <div class="d-flex align-items-start">
                            <img src="/img/alveole.png" alt="Participation" style="width: 20px; height: 15px; margin-right: 8px; margin-top: 3px;">
                            <div>
                                <strong>Démocratie participative</strong><br>
                                <small class="text-muted">Chaque citoyen peut contribuer aux décisions locales</small>
                            </div>
                        </div>
                    </div>
                    
                    <div class="timeline-item living-cell">
                        <div class="d-flex align-items-start">
                            <img src="/img/alveole.png" alt="Territoire" style="width: 20px; height: 20px; margin-right: 8px; margin-top: 3px;">
                            <div>
                                <strong>Ancrage territorial</strong><br>
                                <small class="text-success">Solutions adaptées aux enjeux locaux</small>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Add Rubrix Cube in info section -->
                <div class="text-center mt-3">
                    <img src="/img/rubrixcube.png" alt="Rubrix Cube" style="width: 40px; height: 40px; opacity: 0.6;">
                </div>
            </div>

            <div class="section-card">
                <h5 class="h6 mb-3">📧 Processus de Création</h5>
                <div class="verification-steps">
                    <div class="step">
                        <strong>1. Création</strong><br>
                        <small>Remplissez le formulaire avec vos informations</small>
                    </div>
                    <div class="step">
                        <strong>2. Email</strong><br>
                        <small>Recevez un email de vérification</small>
                    </div>
                    <div class="step">
                        <strong>3. Activation</strong><br>
                        <small>Cliquez sur le lien pour activer votre alvéole</small>
                    </div>
                    <div class="step">
                        <strong>4. Carte</strong><br>
                        <small>Votre alvéole apparaît sur la carte</small>
                    </div>
                </div>
            </div>

            <!-- Biodiversity indicators with frogs -->
            <div class="section-card">
                <h5 class="h6 mb-3">🌱 Sentinelles Écologiques</h5>
                <p class="small text-muted mb-3">Les grenouilles veillent sur la santé de notre démocratie :</p>
                <div class="row">
                    <div class="col-6 text-center mb-2">
                        <img src="/img/frog_big.png" alt="Tradition Guardian" style="width: 20px; height: 20px;">
                        <small class="d-block" style="font-size: 0.7rem;">Gardienne</small>
                    </div>
                    <div class="col-6 text-center mb-2">
                        <img src="/img/frog_peace.png" alt="Peace Mediator" style="width: 20px; height: 20px;">
                        <small class="d-block" style="font-size: 0.7rem;">Médiatrice</small>
                    </div>
                    <div class="col-6 text-center">
                        <img src="/img/frog_wings.png" alt="Future Visionary" style="width: 20px; height: 20px;">
                        <small class="d-block" style="font-size: 0.7rem;">Visionnaire</small>
                    </div>
                    <div class="col-6 text-center">
                        <img src="/img/frog_wings_front.png" alt="Change Leader" style="width: 20px; height: 20px;">
                        <small class="d-block" style="font-size: 0.7rem;">Guide</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Variables globales
    let allVilles = [];
    let currentMode = 'search'; // 'search' ou 'list'
    let searchTimeout;
    let searchCache = new Map(); // Cache côté client

    // Validation Bootstrap
    (function() {
        'use strict';
        window.addEventListener('load', function() {
            var forms = document.getElementsByClassName('needs-validation');
            var validation = Array.prototype.filter.call(forms, function(form) {
                form.addEventListener('submit', function(event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();

    // Auto-dismiss alerts after 5 seconds
    setTimeout(function() {
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
            if (alert.querySelector('.btn-close')) {
                alert.querySelector('.btn-close').click();
            }
        });
    }, 5000);

    // Initialisation au chargement de la page
    document.addEventListener('DOMContentLoaded', function() {
        initializeVilleSelector();
        setupEventListeners();
        // Précharger les villes populaires
        preloadPopularCities();
    });

    function initializeVilleSelector() {
        const searchInput = document.getElementById('ville-search');
        const villeCodeInput = document.getElementById('VilleCode');
        const resultsContainer = document.getElementById('ville-results');
        
        // Configuration des événements de recherche avec debounce optimisé
        searchInput.addEventListener('input', function() {
            const query = this.value.trim();
            
            clearTimeout(searchTimeout);
            
            if (query.length < 2) {
                resultsContainer.innerHTML = '';
                resultsContainer.style.display = 'none';
                villeCodeInput.value = '';
                return;
            }

            // Augmenter le délai pour réduire les appels
            searchTimeout = setTimeout(() => {
                searchVilles(query);
            }, 500); // Augmenté de 300ms à 500ms
        });

        // Validation personnalisée
        const form = searchInput.closest('form');
        if (form) {
            form.addEventListener('submit', function(e) {
                if (!villeCodeInput.value) {
                    e.preventDefault();
                    searchInput.classList.add('is-invalid');
                    searchInput.focus();
                }
            });
        }

        // Cacher les résultats quand on clique ailleurs
        document.addEventListener('click', function(e) {
            const searchMode = document.querySelector('.search-mode');
            if (!searchMode.contains(e.target)) {
                resultsContainer.style.display = 'none';
            }
        });
    }

    function setupEventListeners() {
        // Bouton pour basculer vers la liste
        document.getElementById('toggle-mode').addEventListener('click', function() {
            switchToListMode();
        });

        // Bouton pour basculer vers la recherche
        document.getElementById('toggle-search').addEventListener('click', function() {
            switchToSearchMode();
        });

        // Bouton pour charger les villes populaires
        document.getElementById('load-popular').addEventListener('click', function() {
            loadPopularCities();
        });

        // Gestion de la sélection dans la liste
        document.getElementById('ville-select').addEventListener('change', function() {
            selectVilleFromList(this.value);
        });

        // Filtrage de la liste avec debounce
        let filterTimeout;
        document.getElementById('filter-list').addEventListener('input', function() {
            const filter = this.value;
            clearTimeout(filterTimeout);
            filterTimeout = setTimeout(() => {
                filterVilleList(filter);
            }, 200);
        });
    }

    // Fonction pour normaliser les chaînes et supprimer les accents
    function normalizeString(str) {
        if (!str) return str;
        
        return str.normalize('NFD')
                  .replace(/[\u0300-\u036f]/g, '') // Supprimer les diacritiques
                  .normalize('NFC');
    }

    // Précharger les villes populaires au démarrage
    async function preloadPopularCities() {
        try {
            const response = await fetch('/api/villes/popular');
            if (response.ok) {
                const villes = await response.json();
                // Mettre en cache les résultats
                searchCache.set('popular', villes);
            }
        } catch (error) {
            console.warn('Impossible de précharger les villes populaires:', error);
        }
    }

    async function searchVilles(query) {
        const resultsContainer = document.getElementById('ville-results');
        
        // Normaliser la requête pour la recherche avec accents
        const normalizedQuery = normalizeString(query.toLowerCase());
        
        // Vérifier le cache d'abord (utiliser la requête normalisée comme clé)
        const cacheKey = normalizedQuery;
        if (searchCache.has(cacheKey)) {
            displaySearchResults(searchCache.get(cacheKey));
            return;
        }
        
        try {
            // Afficher un indicateur de chargement
            resultsContainer.innerHTML = '<div class="search-result-item text-muted"><i class="fas fa-spinner fa-spin"></i> Recherche en cours...</div>';
            resultsContainer.style.display = 'block';

            // Utiliser la requête originale pour l'API (le serveur gère la normalisation)
            const response = await fetch(`/api/villes/search?q=${encodeURIComponent(query)}`);
            
            if (!response.ok) {
                throw new Error(`Erreur HTTP: ${response.status}`);
            }
            
            const data = await response.json();
            
            // Mettre en cache le résultat avec la clé normalisée
            searchCache.set(cacheKey, data);
            
            displaySearchResults(data);
        } catch (error) {
            console.error('Erreur lors de la recherche:', error);
            resultsContainer.innerHTML = '<div class="search-result-item text-danger"><i class="fas fa-exclamation-triangle"></i> Service temporairement indisponible</div>';
            resultsContainer.style.display = 'block';
        }
    }

    function displaySearchResults(villes) {
        const resultsContainer = document.getElementById('ville-results');
        
        if (villes.length === 0) {
            resultsContainer.innerHTML = '<div class="search-result-item text-muted"><i class="fas fa-search"></i> Aucune ville trouvée</div>';
            resultsContainer.style.display = 'block';
            return;
        }

        const html = villes.map(ville => `
            <div class="search-result-item" data-code="${ville.code}" data-display="${ville.display}">
                <div class="ville-name">🏙️ ${ville.nom}</div>
                <div class="ville-details">${ville.departement}, ${ville.region}</div>
            </div>
        `).join('');

        resultsContainer.innerHTML = html;
        resultsContainer.style.display = 'block';

        // Ajouter les événements de clic
        resultsContainer.querySelectorAll('.search-result-item').forEach(item => {
            item.addEventListener('click', function() {
                selectVille(this.dataset.code, this.dataset.display);
            });
        });
    }

    async function switchToListMode() {
        currentMode = 'list';
        document.querySelector('.search-mode').style.display = 'none';
        document.querySelector('.list-mode').style.display = 'block';
        
        if (allVilles.length === 0) {
            await loadAllVilles();
        }
        
        populateVilleList(allVilles);
    }

    function switchToSearchMode() {
        currentMode = 'search';
        document.querySelector('.list-mode').style.display = 'none';
        document.querySelector('.search-mode').style.display = 'block';
        
        // Reset search
        document.getElementById('ville-search').value = '';
        document.getElementById('ville-results').style.display = 'none';
    }

    async function loadAllVilles() {
        const villeSelect = document.getElementById('ville-select');
        villeSelect.innerHTML = '<option value=""><i class="fas fa-spinner fa-spin"></i> Chargement...</option>';
        
        try {
            // Charger un échantillon raisonnable de villes (200 max pour éviter les problèmes de performance)
            const response = await fetch('/api/villes/all-france?limit=200');
            if (!response.ok) {
                throw new Error(`Erreur HTTP: ${response.status}`);
            }
            allVilles = await response.json();
            
            if (allVilles.length === 0) {
                villeSelect.innerHTML = '<option value="">Aucune ville disponible</option>';
                return;
            }
            
            // Trier les villes par nom
            allVilles.sort((a, b) => a.nom.localeCompare(b.nom));
            
            populateVilleList(allVilles);
            
            // Ajouter un message informatif sur le nombre de villes chargées
            const filterInput = document.getElementById('filter-list');
            filterInput.placeholder = `Filtrer parmi ${allVilles.length} villes...`;
            
        } catch (error) {
            console.error('Erreur lors du chargement des villes:', error);
            villeSelect.innerHTML = '<option value="">Service temporairement indisponible</option>';
        }
    }

    async function loadPopularCities() {
        const searchInput = document.getElementById('ville-search');
        searchInput.value = '';
        
        try {
            // Vérifier le cache d'abord
            let villes;
            if (searchCache.has('popular')) {
                villes = searchCache.get('popular');
            } else {
                const response = await fetch('/api/villes/popular');
                if (!response.ok) {
                    throw new Error(`Erreur HTTP: ${response.status}`);
                }
                villes = await response.json();
                searchCache.set('popular', villes);
            }
            
            displaySearchResults(villes);
        } catch (error) {
            console.error('Erreur lors du chargement des villes populaires:', error);
            const resultsContainer = document.getElementById('ville-results');
            resultsContainer.innerHTML = '<div class="search-result-item text-danger"><i class="fas fa-exclamation-triangle"></i> Service temporairement indisponible</div>';
            resultsContainer.style.display = 'block';
        }
    }

    function populateVilleList(villes) {
        const villeSelect = document.getElementById('ville-select');
        const countInfo = document.getElementById('ville-count-info');
        
        if (villes.length === 0) {
            villeSelect.innerHTML = '<option value="">Aucune ville trouvée</option>';
            countInfo.textContent = 'Aucune ville trouvée';
            return;
        }
        
        const html = villes.map(ville => `
            <option value="${ville.code}" data-display="${ville.display}">
                🏙️ ${ville.nom} (${ville.departement}, ${ville.region})
            </option>
        `).join('');
        
        villeSelect.innerHTML = '<option value="">Sélectionnez une ville...</option>' + html;
        countInfo.textContent = `${villes.length} ville(s) disponible(s)`;
    }

    function filterVilleList(filter) {
        if (!filter.trim()) {
            populateVilleList(allVilles);
            return;
        }
        
        // Normaliser le filtre pour la recherche avec accents
        const normalizedFilter = normalizeString(filter.toLowerCase());
        
        const filtered = allVilles.filter(ville => 
            normalizeString(ville.nom.toLowerCase()).includes(normalizedFilter) ||
            normalizeString(ville.departement.toLowerCase()).includes(normalizedFilter) ||
            normalizeString(ville.region.toLowerCase()).includes(normalizedFilter)
        );
        
        populateVilleList(filtered);
        
        // Mettre à jour le placeholder du filtre
        const filterInput = document.getElementById('filter-list');
        if (filtered.length === 0) {
            filterInput.placeholder = 'Aucun résultat pour ce filtre...';
        } else {
            filterInput.placeholder = `${filtered.length} résultat(s) trouvé(s)...`;
        }
    }

    function selectVilleFromList(villeCode) {
        if (!villeCode) return;
        
        const option = document.querySelector(`#ville-select option[value="${villeCode}"]`);
        if (option) {
            const display = option.dataset.display;
            selectVille(villeCode, display);
        }
    }

    function selectVille(code, display) {
        const searchInput = document.getElementById('ville-search');
        const villeCodeInput = document.getElementById('VilleCode');
        const resultsContainer = document.getElementById('ville-results');
        
        searchInput.value = display;
        villeCodeInput.value = code;
        resultsContainer.style.display = 'none';
        
        // Marquer comme valide
        searchInput.classList.remove('is-invalid');
        searchInput.classList.add('is-valid');
        
        // Si on est en mode liste, synchroniser la sélection
        if (currentMode === 'list') {
            document.getElementById('ville-select').value = code;
        }
    }
</script>

<style>
    .alveole-info .timeline-item {
        padding: 10px 0;
        border-bottom: 1px solid #eee;
    }

    .alveole-info .timeline-item:last-child {
        border-bottom: none;
    }

    .verification-steps .step {
        padding: 8px 0;
        border-left: 3px solid #FFD700;
        padding-left: 15px;
        margin-bottom: 10px;
    }

    .living-cell {
        background-color: #f8fff8;
        border-radius: 5px;
        padding: 10px;
    }

    .form-control:focus, .form-select:focus {
        border-color: #FFD700;
        box-shadow: 0 0 0 0.2rem rgba(255, 215, 0, 0.25);
    }

    .was-validated .form-control:valid, .was-validated .form-select:valid {
        border-color: #28a745;
    }

    .was-validated .form-control:invalid, .was-validated .form-select:invalid {
        border-color: #dc3545;
    }

    /* Styles pour le sélecteur de ville */
    .ville-selector {
        border: 1px solid #ddd;
        border-radius: 0.375rem;
        padding: 1rem;
        background-color: #f8f9fa;
    }

    /* Styles pour la recherche de villes */
    .search-results {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: white;
        border: 1px solid #ddd;
        border-top: none;
        border-radius: 0 0 0.375rem 0.375rem;
        max-height: 300px;
        overflow-y: auto;
        z-index: 1000;
        display: none;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .search-result-item {
        padding: 12px 16px;
        cursor: pointer;
        border-bottom: 1px solid #f0f0f0;
        transition: background-color 0.2s;
    }

    .search-result-item:hover {
        background-color: #f8f9fa;
    }

    .search-result-item:last-child {
        border-bottom: none;
    }

    .ville-name {
        font-weight: 500;
        color: #333;
        margin-bottom: 2px;
    }

    .ville-details {
        font-size: 0.875rem;
        color: #666;
    }

    .search-result-item.text-muted {
        text-align: center;
        font-style: italic;
        cursor: default;
    }

    .search-result-item.text-danger {
        text-align: center;
        cursor: default;
    }

    .search-result-item.text-muted:hover,
    .search-result-item.text-danger:hover {
        background-color: transparent;
    }

    /* Améliorer l'apparence du champ de recherche */
    #ville-search {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23666' viewBox='0 0 16 16'%3e%3cpath d='M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right 12px center;
        background-size: 16px;
        padding-right: 40px;
    }

    /* Styles pour la liste déroulante */
    #ville-select {
        height: 200px;
        font-size: 0.9rem;
    }

    #ville-select option {
        padding: 8px;
        border-bottom: 1px solid #eee;
    }

    /* Améliorer le style du filtre */
    #filter-list {
        margin-top: 8px;
    }

    /* Animation pour les transitions */
    .search-mode, .list-mode {
        transition: all 0.3s ease;
    }

    /* Responsive design pour mobiles */
    .ville-selector {
        padding: 0.75rem;
    }
    
    #ville-select {
        height: 150px;
    }
    
    .search-results {
        max-height: 200px;
    }
</style>