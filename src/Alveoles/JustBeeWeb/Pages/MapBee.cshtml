@page
@using JustBeeWeb.Serialization
@using System.Text.Json
@model MapBeeModel
@{
    ViewData["Title"] = "Carte des Alvéoles";
    
    // Détection AJAX pour éviter l'inclusion du layout lors d'un chargement AJAX
    var isAjax = HttpContext.Request.Headers["X-Requested-With"] == "XMLHttpRequest";
    Layout = isAjax ? null : "_Layout";
}

<!-- Hero Section for MapBee -->
<div class="hero-section">
    <div class="container hero-content">
        <div class="text-center">
            <img src="/img/alveole.png" alt="Beehive Map" class="bee-icon">
            <h1 class="display-4 fw-bold mb-3">🗺️ Réseau des Alvéoles</h1>
            <p class="lead mb-4">
                Cartographie interactive des alvéoles françaises et visualisation de l'essaimage démocratique.
            </p>
            
            <!-- Add Rubrix Cube in hero -->
            <div class="mb-3">
                <img src="/img/rubrixcube.png" alt="Rubrix Cube" style="width: 50px; height: 50px; opacity: 0.8;">
            </div>
            
            <div class="d-flex justify-content-center gap-3">
                <a href="/CreerAlveole" class="btn btn-bee">
                    <i class="fas fa-plus"></i> Créer une Alvéole
                </a>
                <a href="#map-section" class="btn btn-outline-light">
                    <i class="fas fa-map-marked-alt"></i> Explorer les Alvéoles
                </a>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid" id="map-section">
    <div class="row">
        <!-- Carte Leaflet -->
        <div class="col-lg-8">
            <div class="section-card">
                <div class="d-flex align-items-center justify-content-between mb-3">
                    <h3 class="h4 mb-0">🗺️ Carte des Alvéoles Françaises</h3>
                    <img src="/img/alveole.png" alt="Map Bee" style="width: 35px; height: 25px;">
                </div>
                <div id="map" style="height: 600px; width: 100%; border-radius: 10px;"></div>
            </div>
        </div>
        
        <!-- Panneau d'informations -->
        <div class="col-lg-4">
            <div class="section-card">
                <div class="d-flex align-items-center mb-3">
                    <img src="/img/alveole.png" alt="Info Honeycomb" style="width: 35px; height: 35px; margin-right: 10px;">
                    <h5 class="mb-0">📊 Tableau de Bord</h5>
                </div>
                <div class="highlight-box">
                    <div class="row text-center">
                        <div class="col-4">
                            <strong class="text-success">@Model.AllAlveoles.Count</strong>
                            <br><small>🏠 Alvéoles</small>
                        </div>
                        <div class="col-4">
                            <strong class="text-info">@Model.Villes.Count(v => Model.AllPersons.Any(p => p.VilleCode == v.Code) || Model.AllAlveoles.Any(a => a.VilleCode == v.Code))</strong>
                            <br><small>🏙️ Villes</small>
                        </div>
                        <div class="col-4 text-center">
                            <img src="/img/rubrixcube.png" alt="Cube" style="width: 25px; height: 25px; opacity: 0.7;">
                            <br><small>🎯 Innovation</small>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="section-card">
                <div class="d-flex align-items-center mb-3">
                    <img src="/img/alveole.png" alt="Cities" style="width: 35px; height: 35px; margin-right: 10px;">
                    <h5 class="mb-0">🏙️ Alvéoles Actives</h5>
                </div>
                <div style="max-height: 400px; overflow-y: auto;">
                    @{
                        var villesActives = Model.Villes.Where(v => 
                            Model.AllPersons.Any(p => p.VilleCode == v.Code) || 
                            Model.AllAlveoles.Any(a => a.VilleCode == v.Code)
                        ).OrderByDescending(v => 
                            Model.AllPersons.Count(p => p.VilleCode == v.Code) + 
                            Model.AllAlveoles.Count(a => a.VilleCode == v.Code)
                        );
                    }
                    @if (villesActives.Any())
                    {
                        @foreach (var ville in villesActives)
                        {
                            var personnesVerifiees = Model.AllPersons.Where(p => p.VilleCode == ville.Code).ToList();
                            var alveolesVerifiees = Model.AllAlveoles.Where(a => a.VilleCode == ville.Code).ToList();
                            var totalElements = personnesVerifiees.Count + alveolesVerifiees.Count;
                            
                            <div class="timeline-item mb-2">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <strong>🏙️ @ville.Nom</strong> 
                                        <span class="badge bg-warning text-dark ms-1">@totalElements</span>
                                        <br />
                                        <small class="text-muted">📍 @ville.Region (@ville.Departement)</small>
                                    </div>
                                </div>
                                <div class="mt-1">
                                    @if (personnesVerifiees.Any())
                                    {
                                        <small class="text-info">
                                            🐝 @string.Join(", ", personnesVerifiees.Select(p => p.Pseudo))
                                        </small>
                                        @if (alveolesVerifiees.Any())
                                        {
                                            <br />
                                        }
                                    }
                                    @if (alveolesVerifiees.Any())
                                    {
                                        <small class="text-success">
                                            🏠 @string.Join(", ", alveolesVerifiees.Select(a => a.Nom))
                                        </small>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <img src="/img/alveole.png" alt="Empty" style="width: 40px; height: 40px; opacity: 0.5;">
                            <p class="text-muted mt-2">Aucune ville active pour le moment</p>
                            <a href="/CreerAlveole" class="btn btn-bee btn-sm">Créer la première alvéole</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Navigation Section -->
<div class="container my-5">
    <div class="section-card">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h3 class="h4 mb-3">🚀 Étendre l'Essaimage Démocratique</h3>
                <p class="mb-0">
                    Participez à l'expansion du réseau des ruches démocratiques en créant des alvéoles dans votre ville.
                    Seules les alvéoles avec email vérifié apparaissent sur la carte.
                </p>
            </div>
            <div class="col-md-4 text-center">
                <div class="bee-conclusion-group mb-3">
                    <img src="/img/alveole.png" alt="Bee Hero" style="width: 30px; height: 23px; margin: 0 3px;">
                    <img src="/img/alveole.png" alt="Honeycomb" style="width: 30px; height: 23px; margin: 0 3px;">
                    <img src="/img/alveole.png" alt="Beehive" style="width: 30px; height: 30px; margin: 0 3px;">
                    <img src="/img/rubrixcube.png" alt="Rubrix Cube" style="width: 30px; height: 30px; margin: 0 3px;">
                </div>
                <div class="d-flex gap-2 justify-content-center">
                    <a href="/" class="btn btn-outline-warning btn-sm">Retour Ruche</a>
                    <a href="/CreerAlveole" class="btn btn-bee btn-sm">Créer Alvéole</a>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .popup-content {
        min-width: 250px;
    }
    
    .popup-content h6 {
        color: #8B4513;
    }
    
    .popup-content .btn-bee {
        font-size: 0.8rem;
        padding: 0.4rem 0.8rem;
    }

    .legend {
        background: white;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 0 15px rgba(0,0,0,0.2);
        line-height: 18px;
        color: #555;
    }

    .legend h6 {
        margin: 0 0 5px 0;
        color: #8B4513;
    }
</style>
